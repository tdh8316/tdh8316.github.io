{"version":3,"sources":["logo.svg","pages/Home.tsx","pages/Projects.tsx","pages/About.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","menuStyle","marginTop","headerStyle","color","fontWeight","arrowButtonStyle","backgroundColor","backgroundRepeat","border","overflow","outline","cursor","HomePage","state","isIntroShow","isArrowShow","setTimeout","setState","this","className","style","height","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Form","inline","Link","x","spring","opacity","defaultStyle","WebkitTransform","transform","letterSpacing","fontSize","y","onClick","width","viewBox","xmlns","d","strokeWidth","strokeLinecap","strokeLinejoin","textAlign","padding","React","Component","App","src","logo","alt","target","rel","exact","path","component","AboutPage","ProjectsPage","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6c0403c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import CSS from \"csstype\";\r\nimport React from \"react\";\r\nimport { Motion, spring } from \"react-motion\";\r\nimport { StickyContainer, Sticky } from \"react-sticky\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { Nav, Navbar, Form } from \"react-bootstrap\";\r\nimport \"../index.css\";\r\nimport \"../App.css\";\r\n\r\nconst menuStyle: CSS.Properties = {\r\n  marginTop: \"-16px\"\r\n};\r\nconst headerStyle: CSS.Properties = {\r\n  color: \"#151515\",\r\n  fontWeight: 200\r\n};\r\nconst arrowButtonStyle: CSS.Properties = {\r\n  backgroundColor: \"transparent\",\r\n  backgroundRepeat: \"no-repeat\",\r\n  border: \"none\",\r\n  overflow: \"hidden\",\r\n  outline: \"none\",\r\n  cursor: \"pointer\"\r\n};\r\nconst intro: String =\r\n  \"is a student at the day and \" +\r\n  \"is a software developer at night. He is passionate about \" +\r\n  \"building software that makes our life beautiful.\";\r\n\r\nclass HomePage extends React.Component {\r\n  state = {\r\n    isIntroShow: false,\r\n    isArrowShow: false\r\n  };\r\n\r\n  render() {\r\n    setTimeout(() => {\r\n      this.setState({ isIntroShow: true });\r\n    }, 256);\r\n    setTimeout(() => {\r\n      this.setState({ isArrowShow: true });\r\n    }, 1024);\r\n    const isIntroShow = this.state.isIntroShow;\r\n    const isArrowShow = this.state.isArrowShow;\r\n    return (\r\n      <StickyContainer className=\"App\">\r\n        <Sticky style={{ height: \"32px\" }}>\r\n          {() => (\r\n            <header className=\"App-menu\" style={menuStyle}>\r\n              <Navbar bg=\"light\" expand=\"lg\">\r\n                <Navbar.Brand href=\"#\">Donghyeok Tak</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                  <Nav className=\"mr-auto\"></Nav>\r\n                  <Form inline>\r\n                    <Nav className=\"mr-auto\">\r\n                      <Nav.Link href=\"/\">Home</Nav.Link>\r\n                      <Nav.Link href=\"/projects\">Projects</Nav.Link>\r\n                    </Nav>\r\n                  </Form>\r\n                </Navbar.Collapse>\r\n              </Navbar>\r\n            </header>\r\n          )}\r\n        </Sticky>\r\n        <header className=\"App-header\" style={headerStyle}>\r\n          <div className=\"App-header-intro\">\r\n            <Motion\r\n              style={{ x: spring(0), opacity: spring(1) }}\r\n              defaultStyle={{ x: -256, opacity: 0 }}\r\n            >\r\n              {({ x, opacity }) => (\r\n                <div\r\n                  style={{\r\n                    WebkitTransform: `translateX(${x}px)`,\r\n                    transform: `translateX(${x}px)`,\r\n                    opacity: opacity\r\n                  }}\r\n                >\r\n                  <h1\r\n                    style={{\r\n                      letterSpacing: 1.5,\r\n                      fontSize: \"2.5em\",\r\n                      fontWeight: 400\r\n                    }}\r\n                    className=\"App-header-intro-name\"\r\n                  >\r\n                    Donghyeok Tak\r\n                  </h1>\r\n                </div>\r\n              )}\r\n            </Motion>\r\n            <Motion\r\n              style={{\r\n                y: spring(isIntroShow ? 0 : -128),\r\n                opacity: spring(isIntroShow ? 1 : 0)\r\n              }}\r\n              defaultStyle={{ y: -128, opacity: 0 }}\r\n            >\r\n              {({ y, opacity }) => (\r\n                <div\r\n                  style={{\r\n                    WebkitTransform: `translate3d(0, ${-y}px, 0)`,\r\n                    transform: `translate3d(0, ${-y}px, 0)`,\r\n                    opacity: opacity\r\n                  }}\r\n                >\r\n                  <h1\r\n                    style={{\r\n                      color: \"#696969\",\r\n                      fontWeight: 300,\r\n                      letterSpacing: 1.25,\r\n                      fontSize: \"2em\"\r\n                    }}\r\n                  >\r\n                    {intro}\r\n                  </h1>\r\n                </div>\r\n              )}\r\n            </Motion>\r\n          </div>\r\n        </header>\r\n        <Motion\r\n          style={{\r\n            y: spring(isArrowShow ? 0 : -32),\r\n            opacity: spring(isArrowShow ? 1 : 0)\r\n          }}\r\n          defaultStyle={{ y: -32, opacity: 0 }}\r\n        >\r\n          {({ y, opacity }) => (\r\n            <div\r\n              style={{\r\n                WebkitTransform: `translate3d(0, ${-y}px, 0)`,\r\n                transform: `translate3d(0, ${-y}px, 0)`,\r\n                opacity: opacity\r\n              }}\r\n              className=\"App-header-arrow-div\"\r\n            >\r\n              <button style={arrowButtonStyle} onClick={() => null}>\r\n                <svg\r\n                  className=\"App-header-arrow\"\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M19 14L12 21M12 21L5 14M12 21L12 3\"\r\n                    strokeWidth=\"4\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          )}\r\n        </Motion>\r\n        <h1 style={{ textAlign: \"center\", padding: \"32px\" }}>Coming soon!</h1>\r\n      </StickyContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport logo from '../logo.svg';\r\nimport '../App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.tsx</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport logo from '../logo.svg';\r\nimport '../App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.tsx</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport \"./index.css\";\nimport \"./App.css\";\nimport { AboutPage, HomePage, ProjectsPage } from \"./pages\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route path=\"/about\" component={AboutPage} />\n            <Route path=\"/projects\" component={ProjectsPage} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}